\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename doc.org.info
@settitle Lookup


@c Version and Contact Info
@set AUTHOR Lookup Development Team
@c %**end of header
@finalout


@copying
@end copying




@titlepage
@title Lookup

@author Lookup Development Team

@c The following two commands start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of contents at the beginning.
@contents

@ifnottex
@node Top
@top Lookup Manual
@insertcopying
@end ifnottex

@menu
* Introduction::                        
* Installation::                        
* Usage::                               
* Agents Dictionaries and Modules::     
* Supported Dictionaries::              
* Modules::                             
* Agents::                              
* List of Dictionary Options::          
* Preparing your own support files::    
* Preparing your own agent program::    

@detailmenu
 --- The Detailed Node Listing ---

Introduction

* Supported Dictionaries::                              

Installation

* Installing from Package Manager::                     
* Manual Installation::                                 
* Starting Lookup::                                     

Starting Lookup

* prepare the directory::                               

Usage

* Queries::                                             

Queries

* Query by pattern::                                    
* Query by word::                                       
* Query by region::                                     

Supported Dictionaries

* EPWING Dictionaries::                                 
* DICT online service::                                 
* DIC format dictionaries::                             
* Text/XML Dictionaries::                               

EPWING Dictionaries

* Commercial EPWing Dictionaries::                      
* Commercial LogoVista Dictionaries::                   
* Open/Free EPWing Dictionaries::                       
* Tools to convert from misc data to EPWing format::    

Text/XML Dictionaries

* Unicode Character Database::                          
* Kanji-Database Dictionaries::                         

Agents

* ndeb::                                                
* ndtext::                                              
* ndsary::                                              
* ndpdic::                                              
* ndspell::                                             
* ndic::                                                
* ndict::                                               
* ndweb::                                               
* ndspotlight::                                         
* nddsl::                                               
* ndbtonic::                                            
* ndjitsu::                                             
* ndlatin::                                             
* ndsrd::                                               

ndeb

* Summary::                                             
* Setup::                                               

ndtext

* Summary::                                             
* Usage::                                               
* List of Agent Options::                               
* Supported Files::                                     
* Creating your own support file::                      

ndsary

* Summary::                                             
* Usage::                                               
* List of Agent Options::                               

ndpdic

* Summary::                                             
* Usage::                                               
* References::                                          

ndspell

* Summary::                                             
* Usage::                                               

ndweb

* Summary::                                             
* Usage::                                               

ndspotlight

* Summary::                                             

nddsl

* Summary::                                             
* Usage::                                               

ndbtonic

* Summary::                                             
* Usage::                                               

ndjitsu

* Summary::                                             
* Usage::                                               
* References::                                          

ndlatin

* Summary::                                             
* Usage::                                               

ndsrd

* Summary::                                             
* Usage::                                               
* References::                                          

List of Dictionary Options

* title::                                               
* charsets::                                            
* query-filter::                                        
* charsets::                                            
* arranges::                                            
* arrange-table::                                       

@end detailmenu
@end menu




@node Introduction
@chapter Introduction
Lookup is a searching tool for various dictionaries and external
resources.  It supports almost all kinds of text dictionaries, if
properly specified.


@menu
* Supported Dictionaries::    
@end menu

@node Supported Dictionaries
@section Supported Dictionaries
@itemize
@item 
Text-based dictionaries
(Use of Suffix Array tool (sary) for better performance is also supported)

@item 
EPWING dictionaries

@item 
Search Engines (Spotlight, Hyperestraier)

@item 
Web Search Engines (OpenSearch)

@item 
Spell Checking

@item 
Scanned Paper Dictionaries (index text is needed.)

@end itemize

@node Installation
@chapter Installation

@menu
* Installing from Package Manager::    
* Manual Installation::                
* Starting Lookup::                    
@end menu

@node Installing from Package Manager
@section Installing from Package Manager
(TBW)

@node Manual Installation
@section Manual Installation
(TBW)

@node Starting Lookup
@section Starting Lookup

@menu
* prepare the directory::    
@end menu

@node prepare the directory
@subsection prepare the directory
First, create @verb{,~/.emacs.d/lookup/,} directory and touch
@verb{,~/.emacs.d/lookup/init.el,} file.  Then @verb{~M-x lookup~} will start.

@node Usage
@chapter Usage

@menu
* Queries::    
@end menu

@node Queries
@section Queries

@menu
* Query by pattern::    
* Query by word::       
* Query by region::     
@end menu

@node Query by pattern
@subsection Query by pattern
You can query by patterns, such as "testi*" etc.
@itemize
@item 
lookup-pattern

@item 
lookup-pattern-full-screen

@item 
lookup-pattern-other-frame

@end itemize

@node Query by word
@subsection Query by word
This command will look for the word around the cursor.  
@itemize
@item 
lookup-word

@item 
lookup-word-full-screen

@item 
lookup-word-other-frame

@end itemize

@node Query by region
@subsection Query by region

@node Agents Dictionaries and Modules
@chapter Agents, Dictionaries and Modules

Lookup asks @strong{agents} to find and use the dictionaries.  You must
specify the agents where to find the dictionaries.

Typical agent settings is as follows:

@lisp
(setq lookup-search-agents
      '((ndtext "~/edicts/eijiro/EIJIRO"
                :content-tags ("\n" . "\n")
                :entry-tags ("■" . "  ")
                :head-tags ("■" . " : ")
                :extension ".utf8.TXT")
        .....
@end lisp


This orders @verb{~ndtext~} agents to look for files with "*.utf8.TXT"
extension as dictionary for specified place, and that 

@node Supported Dictionaries
@chapter Supported Dictionaries

@menu
* Supported Dictionaries::    
@end menu

@node EPWING Dictionaries
@section EPWING Dictionaries
EPWING is a standard dictionary format, which is specified by JIS
X 4081.  Various commercial EPWING dictionaries have been
published.  (Many of them are discontinued, though.)

There are also several free EPWing dictionaries.


@menu
* Commercial EPWing Dictionaries::                      
* Commercial LogoVista Dictionaries::                   
* Open/Free EPWing Dictionaries::                       
* Tools to convert from misc data to EPWing format::    
@end menu

@node Commercial EPWing Dictionaries
@subsection Commercial EPWing Dictionaries

@node Commercial LogoVista Dictionaries
@subsection Commercial LogoVista Dictionaries
You need `dessed' to convert LogoVista dictionaries to EPWing
Dictionaries.
@table @samp
@item dessed
@uref{http://hp.vector.co.jp/authors/VA021723/dessed}

@end table

@node Open/Free EPWing Dictionaries
@subsection Open/Free EPWing Dictionaries
@enumerate
@item
Classical (Latin/Greek/Sanskrit) Dictionaries
@itemize
@item 
@uref{http://classicalepwing.sourceforge.jp/}

@end itemize

@item
JMDict (English/Japanese) Dictionary
@itemize
@item 
@uref{http://www.hloeffler.info/epwing/}

@end itemize

@item
Life Science Dictionary
@itemize
@item 
@uref{http://lsd.pharm.kyoto-u.ac.jp/en/download/}

@end itemize

@item
FPWbooks
@itemize
@item 
@uref{http://openlab.ring.gr.jp/edict/fpw/}

@end itemize
@end enumerate

@node Tools to convert from misc data to EPWing format
@subsection Tools to convert from misc. data to EPWing format.
@enumerate
@item
FreePWing
@itemize
@item 
@uref{ftp://ftp.sra.co.jp/pub/misc/freepwing/}

@end itemize

@item
EBStudio
@itemize
@item 
@uref{http://www31.ocn.ne.jp/~h_ishida/EBStudio.html}

@end itemize

@item
EBDump
@itemize
@item 
@uref{http://www31.ocn.ne.jp/~h_ishida/EBDump.html}

@end itemize
@end enumerate

@node DICT online service
@section DICT online service

@node DIC format dictionaries
@section DIC format dictionaries

@node Text/XML Dictionaries
@section Text/XML Dictionaries

@menu
* Unicode Character Database::     
* Kanji-Database Dictionaries::    
@end menu

@node Unicode Character Database
@subsection Unicode Character Database

@node Kanji-Database Dictionaries
@subsection Kanji-Database Dictionaries

@node Modules
@chapter Modules

@node Agents
@chapter Agents
Historically Agents of Lookup are called "ndXXXX.el".


@menu
* ndeb::           
* ndtext::         
* ndsary::         
* ndpdic::         
* ndspell::        
* ndic::           
* ndict::          
* ndweb::          
* ndspotlight::    
* nddsl::          
* ndbtonic::       
* ndjitsu::        
* ndlatin::        
* ndsrd::          
@end menu

@node ndeb
@section ndeb

@menu
* Summary::    
* Setup::      
@end menu

@node Summary
@subsection Summary
@verb{~ndeb~} is an agent for EPWing dictionaries and EB/EBXA/EBXA-C
dictionaries.  You need to install @verb{~eblook~} to use this agent.
@verb{~eblook~} is a particulary useful for Emacs encodings.

@node Setup
@subsection Setup
You need to add the directory where the @verb{~HONMON~} file exists to
@verb{~lookup-search-agents~}.
@lisp
(setq lookup-search-agents 
      '(...
        (ndeb "/path/to/directory/")
        ...))
@end lisp

@node ndtext
@section ndtext

@menu
* Summary::                           
* Usage::                             
* List of Agent Options::             
* Supported Files::                   
* Creating your own support file::    
@end menu

@node Summary
@subsection Summary
@verb{~ndtext~} agent lets you access medium-sized (less than 10Mbyte)
text-based dictionary by `GNU grep'.  It utilizes the multi-line
search feature of GNU grep to search structured document.

@node Usage
@subsection Usage
@enumerate
@item
GNU Grep program
This agent requires GNU Grep (version 2.14 or later).  Make sure
that `grep' of your system is indeed a GNU grep program, by
checking with `-v' option.

@item
Preparation of UTF-8 text files.
Please prepare utf-8 text.  Other encodings, especially Shift@math{_JIS}
texts, do not work with GNU Grep.

@item
Adding agents in setup file.
You can add the following line to an agent to create the document.
@lisp
(setq lookup-search-agents
      '((ndtext "~/edicts/eijiro/EIJIRO"
                :content-tags ("\n" . "\n")
                :entry-tags ("■" . "  ")
                :head-tags ("■" . " : ")
                :extension ".utf8.TXT")
        .....
@end lisp
@end enumerate

@node List of Agent Options
@subsection List of Agent Options
@table @samp
@item :extension
text files to be searched.

@item :content-tags
@verb{~cons~} pair of beginning and ending of contents.

@item :entry-tags
@verb{~cons~} pair of beginning and ending of entries.

@item :entry-tags-list
multiple @verb{~cons~} pairs of @verb{~entry-tags~}.

@item :head-tags
@verb{~cons~} pair of beginning and ending of heading of contents.

@item :code-tags
@verb{~cons~} pair of beginning and ending of content code.

@end table

@node Supported Files
@subsection Supported Files
Several pre-set files are provided for each dictionaries.

@enumerate
@item
Unicode Character Database
@verb{~support-ucd~} lets you investigate the UCD file.  Please download
and install ucd.all.flat.xml in specific directory, and add the
following entry to your `lookup-search-agents'.
@lisp
(setq lookup-search-agents
      `(...
        (ndtext "/path/to/dir/" :extension ".xml")
        ...))
@end lisp

@item
EIJIRO Dictionary
`support-eijiro' lets you search EIJIRO text data.  You can
purchase Eijiro data from @uref{http://www.eijiro.jp/}.
@end enumerate

@node Creating your own support file
@subsection Creating your own support file.
To create your own support file, you must first identify the
structure of your XML file.  For example, typical XML dictionary
file consists of following structures.

@example
<dictionary>
...
  <content>
    <heading>...</heading>
    <code>...</code>
    <entry>...</entry>
    <description>
    .....
    ...<ref id="code">....</ref>...
    ....
    </description>
  </content>
  ....
</dictionary>

@end example

Here, you will see that your document consists of ..
For a single lined dictionary, it would be like.

@example
<entry> ... </entry><description>...</description>

@end example

@node ndsary
@section ndsary

@menu
* Summary::                  
* Usage::                    
* List of Agent Options::    
@end menu

@node Summary
@subsection Summary
@verb{~ndsary~} agent let you search large dictionary text file with
Suffix Array (@uref{http://en.wikipedia.org/wiki/Suffix_array}) index.
By using suffix array, quick search of huge text file will become
quick.  If your text dictionary has more than 100Mbyte, you may
consider using Suffix Array to speed up your search.

@node Usage
@subsection Usage
@enumerate
@item
Installation of `sary' program
First, you must install @verb{~sary~} program from the following URL
(@uref{http://sary.sourceforge.net/index.html.en}).  After intallation,
make sure that @verb{~mksary~} and @verb{~sary~} programs are installed on your
computer.

@item
Prepare the Text Dictionary
Please prepare the text dictionary.  Any encoding is O.K, but
converting to UTF-8 is strongly recommended.

@item
Creating Suffix Array
Create the suffix array index of your dictionary.
@example
mksary -c UTF-8 XXX.txt

@end example
It will create @verb{~XXX.txt.ary~} suffix array file, which will be
identified by @verb{~ndsary~} agents.
@end enumerate

@node List of Agent Options
@subsection List of Agent Options
Most of agent options described by @verb{~ndtext~} can be used, except
@verb{~:extension~} option.  (@verb{~ndsary~} automatically 

@node ndpdic
@section ndpdic

@menu
* Summary::       
* Usage::         
* References::    
@end menu

@node Summary
@subsection Summary
@verb{~ndpdic~} is an agent for @strong{PDIC} dictionaries.  @strong{PDIC} fully
supports Unicode, and it is popular in Japan for Non-English free
dictionaries.

@node Usage
@subsection Usage
Install dictionary to any folder and specify that folder in PDIC
agent as follows.
@lisp
(setq lookup-search-agents 
      '(...
        (ndpdic "/path/to/directory/")
        ...))
@end lisp

@node References
@subsection References
@table @samp
@item PDIC Home Page
@uref{http://homepage3.nifty.com/TaN/}

@item PDIC Dictionary Format
@uref{http://homepage3.nifty.com/TaN/unicode/pdicu-dic.doc}

@item Arabic-Japanese Dictionary
@uref{http://arabic-japanese.com/}

@item PDIC Thai-Japanese Dictionary
@uref{http://www.pdicthai.com/~pdicthai/}

@item Kazuo Korean-Japanese Dictionary
@uref{http://kazuo.fc2web.com/Korean/}

@item Karak (PDIC Chinese-Japanese dictionary)
@uref{http://www.karak.jp/chinese/pdic%E7%94%A8%E4%B8%AD%E5%9B%BD%E8%AA%9E%E8%BE%9E%E6%9B%B8.html}

@end table

@node ndspell
@section ndspell

@menu
* Summary::    
* Usage::      
@end menu

@node Summary
@subsection Summary
@verb{~ndspell~} is a an agent for searching spellings.  If you think
your spelling is unstable, try use this agent.

@node Usage
@subsection Usage

@node ndic
@section ndic
@verb{~ndic~} provides access to @strong{dic} dictionary file formats.  You must
install @verb{~dictzip~}, included in @verb{~dictd~}
(@uref{http://sourceforge.net/projects/dict/files/dictd/}) software.

@node ndict
@section ndict
(To Be Written)

@node ndweb
@section ndweb

@menu
* Summary::    
* Usage::      
@end menu

@node Summary
@subsection Summary
This agent will search for various web search engines by using
"OpenSearch" interface.  As of this interface, only @verb{~prefix~}
searching is possible.

@node Usage
@subsection Usage
Specify the URL with this agent.  Currently, the URL with
@verb{~ndweb-predefined-agents~} are supported.

@node ndspotlight
@section ndspotlight

@menu
* Summary::    
@end menu

@node Summary
@subsection Summary

@node nddsl
@section nddsl

@menu
* Summary::    
* Usage::      
@end menu

@node Summary
@subsection Summary
@verb{~nddsl~} is an agent to search for DSL (Dictionary Specification
Language) file.  This is an extension of @verb{~ndsary~} agent.  You will
need to convert UTF-16 DSL file to UTF-8, and then apply @verb{~mksary~}
program to create suffix array index.

@node Usage
@subsection Usage
First, convert DSL (UTF-16) to UTF-8, by iconv.
@example
iconv -f UTF-16 -t UTF-8 XXX.dsl > XXX.utf8.dsl

@end example
Then, create suffix array index for DSL file.
@example
mksary -c UTF-8 XXX.utf8.dsl

@end example
After that, add the following line to your @verb{~lookup-search-agents~}.
@lisp
(setq lookup-search-agents 
      '(...
        (nddsl "/path/to/directory/")
        ...))
@end lisp
The agent will automatically find suffix array file and add the
dictionary.

@node ndbtonic
@section ndbtonic

@menu
* Summary::    
* Usage::      
@end menu

@node Summary
@subsection Summary
`ndbtonic' agent lets you access BTONIC XML dictionary by using
sary tools.

@node Usage
@subsection Usage
First, you must convert BTONIC file to Shift@math{_JIS} XML file by
btonic2xml110.rb
(@uref{http://hp.vector.co.jp/authors/VA005784/btonic/btonic2xml.html}).
Then, run `mksary-btonic.rb' and `mksary' to create suffix array.
@example
% btonic2xml110.rb XXXX.exi
% ruby mksary-btonic.rb XXXX.xml
% mksary -c Shift_JIS XXXX.xml

@end example
After that, add the following line to your @verb{~lookup-search-agents~}.
@lisp
(setq lookup-search-agents 
      '(...
        (ndbtonic "/path/to/directory/")
        ...))
@end lisp
The agent will automatically find suffix array file and add the
dictionary.

@node ndjitsu
@section ndjitsu

@menu
* Summary::       
* Usage::         
* References::    
@end menu

@node Summary
@subsection Summary
@verb{~ndjitsuu~} is an agent for “Jitsū” (字通) Dictionary, written
by Shizuka Shirakawa and published by Heibon-Sha.  It is one of
the most comprehensive dictionary of Chinese characters.

@node Usage
@subsection Usage
You will need `indexing' program to create index to use Jitsu
program.  First, you must make create two index files, namely
@verb{~jukugo.txt~} and @verb{~oyaji.txt~} from the utility file included in
this file.
@example
% cd ~/edicts/Jitsuu
% /path/to/jitsuu_mk_oyaji_lst.rb > oyaji.txt
% /path/to/jitsuu_mk_jukugo_lst.rb > jukugo.txt

@end example
After that, you must convert oyaji.txt and jukugo.txt to UTF-8
file with @verb{~M-x ndjitsuu-convert-gaiji-to-ucs~}.  Then, place these
two files into the original dictionary and specify that directory
name to agent as follows.
@lisp
(setq lookup-search-agents 
      '(...
        (ndjitsuu "/path/to/directory/")
        ...))
@end lisp

@node References
@subsection References
@table @samp
@item Jitsuu
@uref{http://www.tranradar.net/cd-jitsuu.html}

@end table

@node ndlatin
@section ndlatin

@menu
* Summary::    
* Usage::      
@end menu

@node Summary
@subsection Summary
@verb{~ndlatin~} is an agent that lets you access `WORDS for Latin' by
William Whitaker.

@node Usage
@subsection Usage
@enumerate
@item
MacOS X
`WORD for Latin' is included in Interpres.app
(@uref{https://sites.google.com/site/erikandremendoza/}).  After the
installation of Interpres, add the following line in your set-up
file.  (Make sure that file does exist there and is executable.)
@lisp
(setq ndlatin-program "/Applications/Interpres.app/Contents/Resources/words")
@end lisp

@item
Windows/Linux
`WORD for Latin' can be obtained by following the Wikipedia page.
(@uref{http://en.wikipedia.org/wiki/William_Whitaker%27s_Words})

@item
Setup
After you set the @verb{~ndlatin-program~} properly, just add
@verb{~(ndlatin)~} to your @verb{~lookup-search-agents~} variable.
@end enumerate

@node ndsrd
@section ndsrd

@menu
* Summary::       
* Usage::         
* References::    
@end menu

@node Summary
@subsection Summary
@verb{~ndsrd~} is an agent for "Shōgakukan Random House Dictionary".  To
use this agent, you must install @verb{~csrd~}.
(@uref{http://openlab.ring.gr.jp/edict/csrd/}).  There is a bug in @verb{~csrd~}
program, which can be fixed by @verb{~csrd.c.diff.gz~}. 

@node Usage
@subsection Usage
First, you will need to install the @verb{~csrd~} program.
@example
cd csrd-1.0/
zcat ../csrd.c.diff.gz | patch -p0 (optional)
make -f makefile.unx
sudo mv csrd /usr/local/bin/

@end example
Then, add the following agent to your @verb{~lookup-search-agents~}.
@lisp
(setq lookup-search-agents 
      '(...
        (ndsrd "/path/to/directory/")
        ...))
@end lisp

@node References
@subsection References
@table @samp
@item Shōgakukan Random House Dictionary
@uref{http://www.shogakukan.co.jp/books/detail/_isbn_4099068579}

@item csrd
@uref{http://openlab.ring.gr.jp/edict/csrd}

@item csrd patch
@uref{http://ikazuhiro.s206.xrea.com/filemgmt/index.php?id=10}

@end table

@node List of Dictionary Options
@chapter List of Dictionary Options
Followings are dictionary options, which can be specified by support files.


@menu
* title::            
* charsets::         
* query-filter::     
* charsets::         
* arranges::         
* arrange-table::    
@end menu

@node title
@section :title
(TBW)

@node charsets
@section :charsets
(TBW)

@node query-filter
@section :query-filter
lookup-query-filter-stem-english

@node charsets
@section :charsets
(TBW)

@node arranges
@section :arranges
This option will specify the @emph{additional} arrange functions besides
the default arrange functions.  

@node arrange-table
@section :arrange-table
This option will specify the @emph{overrinding} arrange functions besides
the default arrange functions.  

@node Preparing your own support files
@chapter Preparing your own support files.
To be written.

@node Preparing your own agent program
@chapter Preparing your own agent program.
To be written.

@c Generated by Org mode N/A in Emacs 24.2.92.1.

@bye
